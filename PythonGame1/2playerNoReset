
from operator import truediv
import pygame
import sys 
import os
import pygame.freetype

import random
from pygame.locals import (
    RLEACCEL,
    K_UP,
    K_DOWN,
    K_LEFT,
    K_RIGHT,
    K_ESCAPE,
    KEYDOWN,
    K_RETURN,
    K_w,
    K_s,
    K_a,
    K_d,
    QUIT
)
pygame.mixer.init()

pygame.font.init() 
my_font = pygame.font.SysFont('Comic Sans MS', 30)
text_HP1 = my_font.render(f'Broj pokupljenih bala: 0/5  ', False, (255, 255, 255))
text_HP2 = my_font.render(f'Broj pokupljenih bala: 0/5  ', False, (255, 255, 255))
text_HP3 = my_font.render(f'Poslednja bala!', False, (255, 255, 255))



bg = pygame.image.load("farmy.jpg")

pygame.init()

IntroSound= pygame.mixer.Sound("Intro.ogg")    
GameSound1 = pygame.mixer.Sound("Theme.ogg")
GameSound2 = pygame.mixer.Sound("Theme2.ogg")
OutroSoundSpecial = pygame.mixer.Sound("Outro.ogg")
OutroSound = pygame.mixer.Sound("applause.ogg")
#pygame.mixer.music.play(loops =- 1)

collision_sound_cow = pygame.mixer.Sound("cowfail.ogg")
collision_sound_horse = pygame.mixer.Sound("horsefail.ogg")

Broj1 = 0
Broj2 = 0

SpeedModifier1 = 0
SpeedModifier2 = 0

PlayerSpeedMultiplier1 = 0
PlayerSpeedMultiplier2 = 0
NumberMult1 = 0
NumberMult2 = 0
BulletSpeedMult1 = 0
BulletSpeedMult2 = 0

Special = 0 

SCREEN_WIDTH = 1280
SCREEN_HEIGHT = 720

class Player1(pygame.sprite.Sprite):
    def __init__(self):
        super(Player1, self).__init__()
        self.surf = pygame.image.load("cw.png").convert() 
        
        self.surf.set_colorkey((255,255,255), RLEACCEL)
        
        self.rect = self.surf.get_rect(
            center=(
                0 + 20, SCREEN_HEIGHT / 2                 
            )
        )
                
        
    def update(self, pressed_keys):
        if pressed_keys[K_w]:
            self.rect.move_ip(0, -5 - PlayerSpeedMultiplier1)
        if pressed_keys[K_s]:
            self.rect.move_ip(0, 5 + PlayerSpeedMultiplier1)
        if pressed_keys[K_a]:
            self.rect.move_ip(-5 - PlayerSpeedMultiplier1, 0)
        if pressed_keys[K_d]:
            self.rect.move_ip(5 + PlayerSpeedMultiplier1, 0)
                    
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right >= SCREEN_WIDTH:
            self.rect.right = SCREEN_WIDTH
        if self.rect.top <= 0:
            self.rect.top = 0
        if self.rect.bottom >= SCREEN_HEIGHT:
            self.rect.bottom = SCREEN_HEIGHT
            
class Player2(pygame.sprite.Sprite):
    def __init__(self):
        super(Player2, self).__init__()
        
        self.surf = pygame.image.load("final1.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)
        
        self.rect = self.surf.get_rect(
            center=(
                SCREEN_WIDTH - 20, SCREEN_HEIGHT / 2                 
            )
        )
        
    def update(self, pressed_keys):
        if pressed_keys[K_UP]:
            self.rect.move_ip(0, -5 - PlayerSpeedMultiplier2)
        if pressed_keys[K_DOWN]:
            self.rect.move_ip(0, 5 + PlayerSpeedMultiplier2)
        if pressed_keys[K_LEFT]:
            self.rect.move_ip(-5 - PlayerSpeedMultiplier2, 0)
        if pressed_keys[K_RIGHT]:
            self.rect.move_ip(5 + PlayerSpeedMultiplier2, 0)
        
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right >= SCREEN_WIDTH:
            self.rect.right = SCREEN_WIDTH
        if self.rect.top <= 0:
            self.rect.top = 0
        if self.rect.bottom >= SCREEN_HEIGHT:
            self.rect.bottom = SCREEN_HEIGHT        
          
class Shot1(pygame.sprite.Sprite):
    def __init__(self):
        super(Shot1, self).__init__()
        self.surf = pygame.Surface((25 , 10))        
        self.surf = pygame.image.load("cwbaby.png").convert()
        self.surf.set_colorkey((255,255,255), RLEACCEL)
        self.rect = self.surf.get_rect(
            center=(
                random.randint(-20, 0),
                random.randint(0, SCREEN_HEIGHT),
            )
        )
        self.speed = 2  
    def update(self):
        self.rect.move_ip(self.speed + BulletSpeedMult1,0)
        if self.rect.left >= SCREEN_WIDTH:
            self.kill()
            
class Shot2(pygame.sprite.Sprite):
    def __init__(self):
        super(Shot2, self).__init__()
        self.surf = pygame.Surface((25 , 15))        
        self.surf = pygame.image.load("final1baby.png").convert()
        self.surf.set_colorkey((255,255,255), RLEACCEL)
        self.rect = self.surf.get_rect(
            center=(
                random.randint(SCREEN_WIDTH + 20, SCREEN_WIDTH + 100),
                random.randint(0, SCREEN_HEIGHT),
            )
        )
        self.speed = 2 
    
    def update(self):               
        self.rect.move_ip(-self.speed - BulletSpeedMult2, 0)
        if self.rect.right <= 0:
            self.kill()                     

class Horse(pygame.sprite.Sprite):
    def __init__(self):
        super(Horse, self).__init__()
        self.surf = pygame.image.load("hayb.png").convert()
        self.surf.set_colorkey((255,255,255), RLEACCEL)
        self.rect = self.surf.get_rect(
            center=(random.randint(SCREEN_WIDTH - 900 , SCREEN_WIDTH -300),
            random.randint(SCREEN_HEIGHT - 700, SCREEN_HEIGHT - 50)
        )
        )   
            
class SpeedUP(pygame.sprite.Sprite):
    def __init__(self):
        super(SpeedUP, self).__init__()        
        self.surf = pygame.image.load("ga.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)        
        self.rect = self.surf.get_rect(
            center=(
                random.randint(60, SCREEN_WIDTH - 60),
                random.randint(-20, 0),
            )
        )
        self.speed = random.randint(1, 2)   
    def update(self):
        self.rect.move_ip(0,self.speed)
        if self.rect.top >= SCREEN_HEIGHT:
            self.kill()

class SpeedDown(pygame.sprite.Sprite):
    def __init__(self):
        super(SpeedDown, self).__init__()
        self.surf = pygame.Surface((45 , 45))
        self.surf = pygame.image.load("ra.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)        
        self.rect = self.surf.get_rect(
            center=(
                random.randint(60, SCREEN_WIDTH - 60),
                random.randint(-20, 0),
            )
        )
        self.speed = random.randint(1, 2)  
    def update(self):
        self.rect.move_ip(0,self.speed)
        if self.rect.top >= SCREEN_HEIGHT:
            self.kill()
            
class BulletSpeed(pygame.sprite.Sprite):
    def __init__(self):
        super(BulletSpeed, self).__init__()
        self.surf = pygame.Surface((45 , 45))
        self.surf = pygame.image.load("bs.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)       
        self.rect = self.surf.get_rect(
            center=(
                random.randint(60, SCREEN_WIDTH - 60),
                random.randint(SCREEN_HEIGHT - 20 , SCREEN_HEIGHT ),
            )
        )
        self.speed = random.randint(1, 2)  
    def update(self):
        self.rect.move_ip(0,-self.speed)
        if self.rect.bottom <= 0:
            self.kill() 
            
class BulletFreq(pygame.sprite.Sprite):
    def __init__(self):
        super(BulletFreq, self).__init__()
        self.surf = pygame.Surface((45 , 45))
        self.surf = pygame.image.load("x.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)       
        self.rect = self.surf.get_rect(
            center=(
                random.randint(60, SCREEN_WIDTH - 60),
                random.randint(SCREEN_HEIGHT - 20 , SCREEN_HEIGHT ),
            )
        )
        self.speed = random.randint(1, 2)  
    def update(self):
        self.rect.move_ip(0,-self.speed)
        if self.rect.bottom <= 0:
            self.kill()  

class Harvester(pygame.sprite.Sprite):
    def __init__(self):
        super(Harvester, self).__init__()        
        self.surf = pygame.image.load("comb.png").convert()
        self.surf.set_colorkey((255, 255, 255), RLEACCEL)
        self.rect = self.surf.get_rect(
            center=(
                random.randint(60, SCREEN_WIDTH - 60),
                random.randint(-20, 0),
            )
        )
        self.speed = random.randint(1, 2)  
    def update(self):
        self.rect.move_ip(0,self.speed)
        if self.rect.top >= SCREEN_HEIGHT:
            self.kill()                                                                                
        
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

ADDENEMY1 = pygame.USEREVENT + 1
pygame.time.set_timer(ADDENEMY1, 3000 - NumberMult1)
ADDENEMY2 = pygame.USEREVENT + 2
pygame.time.set_timer(ADDENEMY2, 3000 - NumberMult2)
ADDHorse = pygame.USEREVENT + 3
pygame.time.set_timer(ADDHorse, random.randint(1000,10000))
ADDSpeedUp = pygame.USEREVENT + 4
pygame.time.set_timer(ADDSpeedUp, random.randint(10000,20000))
ADDSpeedDown = pygame.USEREVENT + 5
pygame.time.set_timer(ADDSpeedDown, random.randint(10000,20000))
ADDBulletSpeed = pygame.USEREVENT + 6
pygame.time.set_timer(ADDBulletSpeed, random.randint(10000,20000))
ADDBulletFreq = pygame.USEREVENT + 7
pygame.time.set_timer(ADDBulletFreq, 3000)
ADDCombine = pygame.USEREVENT + 8
pygame.time.set_timer(ADDCombine, 15000)

player1 = Player1()
player2 = Player2()

speeds = pygame.sprite.Group()
freq = pygame.sprite.Group()
enemies1 = pygame.sprite.Group()
enemies2 = pygame.sprite.Group()
horses = pygame.sprite.Group()
speedboost = pygame.sprite.Group()
speedslow = pygame.sprite.Group()
all_sprites = pygame.sprite.Group()
combines = pygame.sprite.Group()

all_sprites.add(player1)
all_sprites.add(player2)
clock = pygame.time.Clock()



    
black=(0,0,0)
IntroSound.play()
Intro=True
OutroCow = False
OutroHorse = False
OutroCowSpecial = False
OutroHorseSpecial = False

while (Intro == True):
    screen.fill(black)
    splash = pygame.image.load("Splash.png")
    screen.blit(splash, (0,0))
    for event in pygame.event.get():
        if event.type== KEYDOWN:
            if event.key == K_RETURN:
                running = True
                Intro = False
                IntroSound.stop()
                
            if event.key == K_ESCAPE:
                pygame.quit()           
                
    pygame.display.flip()

Roll = random.randint(1,2)

if Roll == 1:
    GameSound = GameSound1
    GameSound.play(-1)
else:
    GameSound = GameSound2
    GameSound.play(-1)    



while running:
    #SoundCtr = 0
    #if SoundCtr == 0:
    #   SoundCtr += 1         
    #  GameSound.play()
        
    for event in pygame.event.get():
        if event.type == KEYDOWN:
            if event.key == K_ESCAPE:
                running = False
        elif event.type == QUIT:
            running = False        
        
        elif event.type == ADDENEMY1:            
            new_enemy1 = Shot1()
            enemies1.add(new_enemy1)
            all_sprites.add(new_enemy1)
        elif event.type == ADDENEMY2:            
            new_enemy2 = Shot2()
            enemies2.add(new_enemy2)
            all_sprites.add(new_enemy2)    
        elif event.type == ADDHorse:
            if not horses:                         
                new_horse = Horse()
                horses.add(new_horse)
                all_sprites.add(new_horse)
            else:
                new_horse.kill() 
                new_horse = Horse()
                horses.add(new_horse)
                all_sprites.add(new_horse)   
        elif event.type == ADDSpeedUp:
            new_speed = SpeedUP()
            speedboost.add(new_speed)
            all_sprites.add(new_speed) 
        elif event.type == ADDSpeedDown:
            new_slow = SpeedDown()
            speedslow.add(new_slow)
            all_sprites.add(new_slow)  
        elif event.type == ADDBulletSpeed:
            new_bulletspeed = BulletSpeed()
            speeds.add(new_bulletspeed)
            all_sprites.add(new_bulletspeed) 
        elif event.type == ADDBulletFreq:
            new_bulletfreq = BulletFreq()
            freq.add(new_bulletfreq)
            all_sprites.add(new_bulletfreq)
        elif event.type == ADDCombine:
            new_combine = Harvester()
            combines.add(new_combine)
            all_sprites.add(new_combine)                          
            
    pressed_keys = pygame.key.get_pressed()
    player1.update(pressed_keys)
    player2.update(pressed_keys)
    
    enemies1.update()
    enemies2.update()
    horses.update()
    speedboost.update()
    speedslow.update()
    speeds.update()
    freq.update()
    combines.update()
    
    screen.fill((100,150,250))    
    screen.blit(bg, (0,0))
    screen.blit(text_HP1, (0,0)) 
    screen.blit(text_HP2, (SCREEN_WIDTH - 370,0))
    
    if Broj1 == 4:
        text_HP1 = my_font.render(f' ', False, (255, 255, 255)) 
        screen.blit(text_HP3, (0,0))
    if Broj2 == 4:
        text_HP2 = my_font.render(f' ', False, (255, 255, 255)) 
        screen.blit(text_HP3, (SCREEN_WIDTH - 225,0))
   
        

    for entity in all_sprites:
        screen.blit(entity.surf, entity.rect)

    if pygame.sprite.spritecollideany(player1, speedboost): 
        if SpeedModifier1 == -1 or SpeedModifier1 == 0:
                PlayerSpeedMultiplier1 += 2
                SpeedModifier1 += 1   
                new_speed.kill()
        else:
            new_speed.kill()    
            
    if pygame.sprite.spritecollideany(player1, speedslow):
        if SpeedModifier2 == 0 or SpeedModifier2 == 1:            
            PlayerSpeedMultiplier2 -= 2
            SpeedModifier2 -= 1                   
            new_slow.kill()
        else:
            new_slow.kill()    

    if pygame.sprite.spritecollideany(player2, speedboost):
        if SpeedModifier2 == -1 or SpeedModifier2 == 0:
                PlayerSpeedMultiplier2 += 2
                SpeedModifier2 += 1     
                new_speed.kill()
        else:
            new_speed.kill()  
        
    if pygame.sprite.spritecollideany(player2, speedslow):
        if SpeedModifier1 == 0 or SpeedModifier1 == 1:            
                PlayerSpeedMultiplier1 -= 2
                SpeedModifier1 -= 1                   
                new_slow.kill()
        else:
            new_slow.kill()    
    
    if pygame.sprite.spritecollideany(player1, speeds):
        BulletSpeedMult1 += 2
        new_bulletspeed.kill()
    
    if pygame.sprite.spritecollideany(player2, speeds):
        BulletSpeedMult2 += 2
        new_bulletspeed.kill()
    
    if pygame.sprite.spritecollideany(player1, freq):
        NumberMult1 += 500
        new_bulletfreq.kill()
        player1.kill()
        GameSound.stop() 
        collision_sound_cow.play()
        pygame.time.delay(3000)
        running = False
        OutroHorse = True
    
    if pygame.sprite.spritecollideany(player2, freq):
        NumberMult2 += 500 
        new_bulletfreq.kill() 
        player2.kill()
        GameSound.stop() 
        collision_sound_horse.play()       
        pygame.time.delay(3000)
        running = False
        OutroCow = True  
    
    if pygame.sprite.spritecollideany(player1, combines):       
        new_combine.kill()
        player1.kill()
        GameSound.stop() 
        collision_sound_cow.play()
        pygame.time.delay(3000)
        running = False
        OutroHorse = True
    
    if pygame.sprite.spritecollideany(player2, combines):       
        new_combine.kill()
        player2.kill()
        GameSound.stop() 
        collision_sound_horse.play()
        pygame.time.delay(3000)
        running = False
        OutroCow = True  
    
    if pygame.sprite.spritecollideany(player1, horses):       
        Broj1 += 1
        text_HP1 = my_font.render(f'Broj pokupljenih bala: {Broj1}/5 ', False, (255, 255, 255))
        new_horse.kill()
    
    if pygame.sprite.spritecollideany(player2, horses):       
        Broj2 += 1
        text_HP2 = my_font.render(f'Broj pokupljenih bala: {Broj2}/5 ', False, (255, 255, 255))
        new_horse.kill() 
    
    if pygame.sprite.spritecollideany(player1, enemies2):       
        player1.kill()
        GameSound.stop() 
        collision_sound_cow.play()       
        pygame.time.delay(3000)
        running = False
        OutroHorse = True
    if pygame.sprite.spritecollideany(player2, enemies1):       
        player2.kill()
        new_enemy1.kill()
        GameSound.stop()   
        collision_sound_horse.play()          
        pygame.time.delay(3000)
        running = False
        OutroCow = True
        
        #pygame.quit()
        
    if Broj1 == 5: 
        #text_HP2 = my_font.render(f'Broj pokupljenih bala: {Broj2}/5 ', False, (255, 255, 255))       
        player2.kill()
        Special = 1             
        GameSound.stop() 
        collision_sound_horse.play()
        pygame.time.delay(3000)
        running = False
        OutroCowSpecial = True 
            
    if Broj2 == 5: 
        #text_HP2 = my_font.render(f'Broj pokupljenih bala: {Broj2}/5 ', False, (255, 255, 255))       
        player1.kill()
        Special = 1             
        GameSound.stop() 
        collision_sound_cow.play()
        pygame.time.delay(3000)
        running = False
        OutroHorseSpecial = True  
        Special = 1                                 
    pygame.display.flip()
    clock.tick(60)

if Special == 0:
    black=(0,0,0)
    OutroSound.play()
    while (OutroHorse == True):
        
        screen.fill(black)
        splash = pygame.image.load("OutroHorse.png")
        screen.blit(splash, (0,0))
        for event in pygame.event.get():
            if event.type == KEYDOWN:       
                if event.key == K_ESCAPE:
                    pygame.quit()           
                    
        pygame.display.flip()

        
    while (OutroCow == True):
        
        screen.fill(black)
        splash = pygame.image.load("OutroCow.png")
        screen.blit(splash, (0,0))
        for event in pygame.event.get():
            if event.type == KEYDOWN:       
                if event.key == K_ESCAPE:
                    pygame.quit()           
                    
        pygame.display.flip()        

if Special == 1:
    black=(0,0,0)
    OutroSoundSpecial.play()
    while (OutroHorseSpecial == True):
        screen.fill(black)
        splash = pygame.image.load("OutroHorseSpecial.png")
        screen.blit(splash, (0,0))
        for event in pygame.event.get():
            if event.type == KEYDOWN:       
                if event.key == K_ESCAPE:
                    pygame.quit()           
                    
        pygame.display.flip()


    while (OutroCowSpecial == True):
        screen.fill(black)
        splash = pygame.image.load("OutroCowSpecial.png")
        screen.blit(splash, (0,0))
        for event in pygame.event.get():
            if event.type == KEYDOWN:       
                if event.key == K_ESCAPE:
                    pygame.quit()           
                    
        pygame.display.flip()
            
pygame.quit()

#treba da se odradi da kad napravi nov
#treba da se odradi reset, collision stop moving 
#treba da se odraddi nasumcna game pjesma